{"version":3,"sources":["components/Copyright.js","components/LoginButton.js","components/pages/LoginFormView.js","components/pages/SignIn.js","components/pages/SignUpFormView.js","components/pages/SignUp.js","components/Prodotto.js","components/ListaProdotti.js","Orari.js","components/RiepilogoOrdine.js","components/LogoutButton.js","components/pages/HomePageView.js","components/pages/Home.js","components/OrdineClienteListItem.js","components/ListeOrdini.js","components/pages/PaginaOrdini.js","App.js","index.js"],"names":["Copyright","Typography","variant","color","align","to","Date","getFullYear","LoginButton","loginWithRedirect","useAuth0","Button","style","width","onClick","useStyles","makeStyles","theme","paper","marginTop","spacing","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","LoginFormView","data","setEmail","setPassword","handleSubmit","classes","Container","component","maxWidth","CssBaseline","className","Box","mt","SignIn","useState","email","password","display","flexDirection","SignUpFormView","setNome","setCognome","onSubmit","Grid","container","item","xs","sm","TextField","autoComplete","name","required","fullWidth","id","label","autoFocus","value","nome","onChange","e","target","cognome","type","justify","SignUp","loggedIn","setLoggedIn","renderReindirizzamento","preventDefault","Prodotto","prodotto","aggiungiProdotto","rimuoviProdotto","aggiuntoAllOrdine","setAggiuntoAllOrdine","lg","xl","key","Card","elevation","cardItem","CardContent","title","gutterBottom","tipoprodotto","nomeprodotto","descrizione","Divider","CardActions","prezzo","toFixed","size","button","endIcon","Remove","Add","prodottoSelezionato","quantità","height","fontSize","root","flexGrow","ListaProdotti","prodotti","prodottiOrdine","setProdottiOrdine","aggiungiProdottoAllOrdine","newOrdine","push","rimuoviProdottoDallOrdine","indexToRemove","findIndex","obj","splice","map","orari","RiepilogoOrdine","ordine","updateQuantitàOrdineConId","setOrarioDiRitiro","totaleDaPagare","submitOrdine","orarioRitiro","setOrarioRitiro","user","prodottoOrdine","whiteSpace","IconButton","marginRight","Badge","badgeContent","marginLeft","FormControl","Select","MenuItem","disabled","orario","LogoutButton","logout","returnTo","window","location","origin","HomePageView","isLoading","isAuthenticated","src","alt","AppBar","stlye","position","Toolbar","md","length","Home","props","state","orarioDiRitiroOrdie","richiestaProdottiEffettuata","bind","getNuovoTotaleDaPagare","nuovoTotale","this","forEach","setState","nuovaQuantità","prevState","orarioDiRitiro","identificativoCliente","ordineObject","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","alert","msg","reload","catch","err","console","log","React","Component","OrdineClienteListItem","requestStateChange","itemSelected","setItemSelected","identificativocliente","totaledapagare","prodottiordine","prodottoordine","stato","ottieniTestoDelPulsanteStato","ListeOrdini","arrayOrdini","contatoreOrdini","textAlign","orariodiritiro","verificaNumOrdini","PaginaOrdini","fetchedOrdini","fetchOrdiniFromDatabase","updateStatoOrdine","newArrayOrdini","toString","App","path","exact","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.fe7f5e97.chunk.js","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link color='inherit' to='/'>\n        Prenotazioni Bar\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default Copyright;\n","import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { Button } from '@material-ui/core';\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <Button\n      style={{ width: '100%' }}\n      color='primary'\n      variant='outlined'\n      onClick={() => loginWithRedirect()}\n    >\n      Accedi\n    </Button>\n  );\n};\n\nexport default LoginButton;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Copyright from '../Copyright';\nimport { makeStyles } from '@material-ui/core';\nimport LoginButton from '../LoginButton';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    alignItems: 'center',\n    width: '100%',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function LoginFormView({\n  data,\n  setEmail,\n  setPassword,\n  handleSubmit,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <center>\n          <LoginButton />\n        </center>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport LoginFormView from './LoginFormView';\n\nexport default function SignIn() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n\n  //   // Qui è da fare la autenticazione, se avviene con successo, eseguire la sequente fuznione\n  //   setLoggedIn(true);\n  // };\n\n  // const renderReindirizzamento = () => {\n  //   if (loggedIn) {\n  //     return <Redirect to='/home' />;\n  //   }\n  // };\n\n  return (\n    <>\n      {/* {renderReindirizzamento()} */}\n      <LoginFormView\n        data={{ email, password }}\n        setEmail={setEmail}\n        setPassword={setPassword}\n        // handleSubmit={handleSubmit}\n      />\n      {/* <LoginButton /> */}\n    </>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from '../Copyright';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUpFormView({\n  data,\n  setNome,\n  setCognome,\n  setEmail,\n  setPassword,\n  handleSubmit,\n}) {\n  const classes = useStyles();\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component='h1' variant='h5'>\n          Crea il tuo account\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete='nome'\n                name='nome'\n                variant='outlined'\n                required\n                fullWidth\n                id='nome'\n                label='Nome'\n                autoFocus\n                value={data.nome}\n                onChange={e => setNome(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant='outlined'\n                required\n                fullWidth\n                id='cognome'\n                label='Cognome'\n                name='cognome'\n                autoComplete='cognome'\n                value={data.cognome}\n                onChange={e => setCognome(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant='outlined'\n                required\n                fullWidth\n                id='email'\n                label='Indirizzo Email'\n                name='email'\n                autoComplete='email'\n                value={data.email}\n                onChange={e => setEmail(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant='outlined'\n                required\n                fullWidth\n                name='password'\n                label='Password'\n                type='password'\n                id='password'\n                autoComplete='current-password'\n                value={data.password}\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Crea Account\n          </Button>\n          <Grid container justify='flex-end'>\n            <Grid item>\n              <Link to='/' variant='body2'>\n                Hai già un account? Accedi\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport SignUpFormView from './SignUpFormView';\n\nexport default function SignUp() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [nome, setNome] = useState('');\n  const [cognome, setCognome] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Qui è da fare la creazione del account, se avviene con successo, eseguire la sequente fuznione\n    setLoggedIn(true);\n  };\n\n  const renderReindirizzamento = () => {\n    if (loggedIn) {\n      return <Redirect to='/home' />;\n    }\n  };\n\n  return (\n    <>\n      {renderReindirizzamento()}\n      <SignUpFormView\n        data={{ nome, cognome, email, password }}\n        setNome={setNome}\n        setCognome={setCognome}\n        setEmail={setEmail}\n        setPassword={setPassword}\n        handleSubmit={handleSubmit}\n      />\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Grid,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\n\nimport { Add as AddIcon, Remove as RemoveIcon } from '@material-ui/icons';\n\nexport default function Prodotto({\n  prodotto,\n  aggiungiProdotto,\n  rimuoviProdotto,\n}) {\n  const classes = useStyles();\n  const defaultQuantity = 1;\n\n  const [aggiuntoAllOrdine, setAggiuntoAllOrdine] = useState(false);\n\n  const handleButtonClick = prodottoSelezionato => {\n    if (aggiuntoAllOrdine) {\n      rimuoviProdotto(prodottoSelezionato.prodotto.id);\n    } else {\n      aggiungiProdotto(prodottoSelezionato);\n    }\n    setAggiuntoAllOrdine(!aggiuntoAllOrdine);\n  };\n\n  return (\n    <>\n      <Grid xs={12} sm={6} lg={4} xl={2} key={prodotto.id} item>\n        <Card\n          elevation={aggiuntoAllOrdine ? 20 : 2}\n          className={classes.cardItem}\n        >\n          <CardContent>\n            <Typography\n              className={classes.title}\n              color='textSecondary'\n              gutterBottom\n            >\n              {prodotto.tipoprodotto}\n            </Typography>\n            <Typography variant='h5' component='h2' gutterBottom>\n              {prodotto.nomeprodotto}\n            </Typography>\n            <Typography\n              style={{ color: '#A9A9A9' }}\n              variant='body2'\n              component='p'\n            >\n              <i>{prodotto.descrizione}</i>\n            </Typography>\n          </CardContent>\n          <Divider variant='middle' />\n          <CardActions>\n            <Typography style={{ width: '30%' }} variant='h5' component='h2'>\n              {`€${prodotto.prezzo.toFixed(2)}`}\n            </Typography>\n            <Button\n              style={{ width: '60%' }}\n              variant='contained'\n              size='small'\n              color={aggiuntoAllOrdine ? 'secondary' : 'primary'}\n              className={classes.button}\n              endIcon={\n                aggiuntoAllOrdine ? (\n                  <RemoveIcon size='small' />\n                ) : (\n                  <AddIcon size='small' />\n                )\n              }\n              onClick={() =>\n                handleButtonClick({\n                  prodotto,\n                  quantità: defaultQuantity,\n                })\n              }\n            >\n              {aggiuntoAllOrdine ? 'Rimuovi' : 'Aggiungi'}\n            </Button>\n          </CardActions>\n        </Card>{' '}\n      </Grid>\n    </>\n  );\n}\n\nconst useStyles = makeStyles({\n  cardItem: {\n    height: '100%',\n    width: '100%',\n  },\n  title: {\n    fontSize: 14,\n  },\n});\n","import { Grid, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport Prodotto from './Prodotto';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 'auto',\n    flexGrow: 1,\n  },\n});\n\nexport default function ListaProdotti({\n  prodotti,\n  prodottiOrdine,\n  setProdottiOrdine,\n}) {\n  const classes = useStyles();\n\n  const aggiungiProdottoAllOrdine = prodottoSelezionato => {\n    // setProdottiOrdine(prodottiOrdine.push(id)); --> dovrebbe funzionare ma non va\n    // prodottiOrdine.push(prodottoSelezionato);\n    const newOrdine = prodottiOrdine;\n    newOrdine.push(prodottoSelezionato);\n    setProdottiOrdine(newOrdine);\n  };\n\n  const rimuoviProdottoDallOrdine = id => {\n    // const indexToRemove = prodottiOrdine.indexOf(prodottoSelezionato); --> non funziona dato che l'array è composto di oggetti\n    const indexToRemove = prodottiOrdine.findIndex(\n      obj => obj.prodotto.id === id\n    );\n    if (indexToRemove > -1) {\n      prodottiOrdine.splice(indexToRemove, 1);\n      setProdottiOrdine(prodottiOrdine);\n    }\n  };\n\n  return (\n    <>\n      <Grid className={classes.root} container justify='flex-start' spacing={3}>\n        {prodotti.map(prodotto => (\n          <Prodotto\n            key={prodotto.id}\n            prodotto={prodotto}\n            aggiungiProdotto={aggiungiProdottoAllOrdine}\n            rimuoviProdotto={rimuoviProdottoDallOrdine}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n}\n","const orari = [\n  '10:05-10:20',\n  '10:15-10:30',\n  '10:25-10:40',\n  '10:35-10:50',\n  '10:45-11:00',\n  '10:55-11:10',\n  '11:05-11:20',\n  '11.15-11:30',\n  '11.25-11:40',\n];\n\nexport default orari;\n","import {\n  Badge,\n  Button,\n  Divider,\n  FormControl,\n  Grid,\n  IconButton,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { Add as AddIcon, Remove as RemoveIcon } from '@material-ui/icons';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport orari from '../Orari';\n\nfunction RiepilogoOrdine({\n  ordine,\n  updateQuantitàOrdineConId,\n  setOrarioDiRitiro,\n  totaleDaPagare,\n  submitOrdine,\n}) {\n  const [orarioRitiro, setOrarioRitiro] = useState('');\n  const { user } = useAuth0();\n\n  const handleImpostazioneOrario = e => {\n    setOrarioRitiro(e.target.value);\n    setOrarioDiRitiro(e.target.value);\n  };\n\n  return (\n    <>\n      <Typography variant='h4' gutterBottom>\n        Riepilogo Ordine\n      </Typography>\n      <Divider />\n      {ordine.map(prodottoOrdine => {\n        return (\n          <div key={prodottoOrdine.prodotto.id}>\n            <br />\n            <Grid container justify='flex-start'>\n              <Grid item xs={4}>\n                <Typography variant='subtitle1'>\n                  {prodottoOrdine.prodotto.nomeprodotto}\n                </Typography>\n              </Grid>\n              <Grid style={{ whiteSpace: 'nowrap' }} item xs={5}>\n                <IconButton\n                  onClick={() => {\n                    updateQuantitàOrdineConId(\n                      prodottoOrdine.prodotto.id,\n                      prodottoOrdine.quantità - 1\n                    );\n                  }}\n                >\n                  <RemoveIcon style={{ marginRight: 5 }} fontSize='small' />\n                </IconButton>\n                <Badge\n                  badgeContent={prodottoOrdine.quantità}\n                  color='primary'\n                ></Badge>\n                <IconButton\n                  onClick={() => {\n                    updateQuantitàOrdineConId(\n                      prodottoOrdine.prodotto.id,\n                      prodottoOrdine.quantità + 1\n                    );\n                  }}\n                >\n                  <AddIcon\n                    style={{ display: 'inline', marginLeft: 5 }}\n                    fontSize='small'\n                  />\n                </IconButton>\n              </Grid>\n              <Grid item xs={3}>\n                <Typography variant='subtitle1'>\n                  {`€${(\n                    prodottoOrdine.prodotto.prezzo * prodottoOrdine.quantità\n                  ).toFixed(2)}`}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Typography variant='caption'>\n              <i> - {prodottoOrdine.prodotto.descrizione}</i>\n            </Typography>\n          </div>\n        );\n      })}\n      <br />\n      <Divider />\n      <br />\n      <Grid container justify='flex-end'>\n        <Grid item xs={8}>\n          Totale da pagare:\n        </Grid>\n        <Grid item xs={4}>\n          €{totaleDaPagare.toFixed(2)}\n        </Grid>\n      </Grid>\n      <br />\n      <Divider />\n      <br />\n      <FormControl style={{ width: '100%' }}>\n        <Typography variant='subtitle1'>\n          Seleziona l'orario di ritiro:\n        </Typography>\n        <Select value={orarioRitiro} onChange={handleImpostazioneOrario}>\n          <MenuItem value='' disabled>\n            Seleziona l'orario di ritiro\n          </MenuItem>\n          {orari.map(orario => (\n            <MenuItem key={orario} value={orario}>\n              {orario}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <Button color='primary' onClick={() => submitOrdine(user.name)}>\n        Prenota\n      </Button>\n    </>\n  );\n}\n\nexport default RiepilogoOrdine;\n","import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { Button } from '@material-ui/core';\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n\n  return (\n    <Button\n      style={{ color: 'white' }}\n      onClick={() => logout({ returnTo: window.location.origin })}\n    >\n      Esci\n    </Button>\n  );\n};\n\nexport default LogoutButton;\n","import React from 'react';\nimport {\n  AppBar,\n  Container,\n  Grid,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport ListaProdotti from '../ListaProdotti';\nimport RiepilogoOrdine from '../RiepilogoOrdine';\nimport LogoutButton from '../LogoutButton';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { Redirect } from 'react-router-dom';\n\nconst HomePageView = ({\n  prodotti,\n  prodottiOrdine,\n  setProdottiOrdine,\n  updateQuantitàOrdineConId,\n  setOrarioDiRitiro,\n  totaleDaPagare,\n  submitOrdine,\n}) => {\n  const { user, isLoading, isAuthenticated } = useAuth0();\n\n  if (!isLoading && !isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n\n  if (!isLoading && isAuthenticated && user.email === 'lekjec@gmail.com') {\n    return <Redirect to='/ordini' />;\n  }\n\n  if (!isLoading && isAuthenticated) {\n    return (\n      <div style={{ margin: 0, width: '100%' }}>\n        <img\n          style={{ width: '100%' }}\n          src='https://picsum.photos/id/1080/1024/300'\n          alt=''\n        />\n        <AppBar stlye={{ flexGrow: 1 }} position='static'>\n          <Toolbar>\n            <Typography variant='h6'>Prenotazioni Bar Malignani</Typography>\n            <LogoutButton />\n          </Toolbar>\n        </AppBar>\n\n        <Container>\n          <Typography variant='h3' gutterBottom>\n            I nostri Panini e le nostre Pizze\n          </Typography>\n        </Container>\n        <Grid container justify='center' spacing={5}>\n          <Grid item md={8}>\n            <ListaProdotti\n              prodotti={prodotti}\n              prodottiOrdine={prodottiOrdine}\n              setProdottiOrdine={setProdottiOrdine}\n            />\n          </Grid>\n          {prodottiOrdine.length > 0 ? (\n            <Grid item xs={10} md={4}>\n              <RiepilogoOrdine\n                ordine={prodottiOrdine}\n                updateQuantitàOrdineConId={updateQuantitàOrdineConId}\n                setOrarioDiRitiro={setOrarioDiRitiro}\n                totaleDaPagare={totaleDaPagare}\n                submitOrdine={submitOrdine}\n              />\n            </Grid>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n  if (isLoading) {\n    return (\n      <center>\n        <h1>Loading...</h1>\n      </center>\n    );\n  }\n};\n\nexport default HomePageView;\n","import React from 'react';\nimport HomePageView from './HomePageView';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prodottiOrdine: [],\n      orarioDiRitiroOrdie: 'Non Seleionato',\n      totaleDaPagare: 0,\n      richiestaProdottiEffettuata: false,\n    };\n    this.setProdottiOrdine = this.setProdottiOrdine.bind(this);\n    this.updateQuantitàOrdineConId = this.updateQuantitàOrdineConId.bind(this);\n    this.setOrarioDiRitiro = this.setOrarioDiRitiro.bind(this);\n    this.getNuovoTotaleDaPagare = this.getNuovoTotaleDaPagare.bind(this);\n    this.submitOrdine = this.submitOrdine.bind(this);\n  }\n\n  getNuovoTotaleDaPagare() {\n    let nuovoTotale = 0;\n    this.state.prodottiOrdine.forEach(prodottoOrdine => {\n      nuovoTotale += prodottoOrdine.quantità * prodottoOrdine.prodotto.prezzo;\n    });\n    return nuovoTotale;\n  }\n\n  setProdottiOrdine(newOrdine) {\n    this.setState({\n      prodottiOrdine: newOrdine,\n      totaleDaPagare: this.getNuovoTotaleDaPagare(),\n    });\n  }\n\n  updateQuantitàOrdineConId(id, nuovaQuantità) {\n    if (nuovaQuantità > 0 && nuovaQuantità <= 10) {\n      this.setState(prevState => ({\n        prodottiOrdine: prevState.prodottiOrdine.map(prodottoOrdine => {\n          if (prodottoOrdine.prodotto.id === id) {\n            prodottoOrdine.quantità = nuovaQuantità;\n          }\n          return prodottoOrdine;\n        }),\n        totaleDaPagare: this.getNuovoTotaleDaPagare(),\n      }));\n    }\n  }\n\n  setOrarioDiRitiro(orarioDiRitiro) {\n    if (orarioDiRitiro !== '') {\n      this.setState({ orarioDiRitiroOrdie: orarioDiRitiro });\n    }\n  }\n\n  submitOrdine(identificativoCliente) {\n    if (this.state.orarioDiRitiroOrdie !== 'Non Seleionato') {\n      //qui verrà effettuato il salvataggio sul database\n      const ordineObject = {\n        identificativoCliente: identificativoCliente,\n        orarioDiRitiro: this.state.orarioDiRitiroOrdie,\n        prodottiOrdine: this.state.prodottiOrdine.map(prodottoOrdine => {\n          return {\n            prodotto: prodottoOrdine.prodotto.id,\n            quantità: prodottoOrdine.quantità,\n          };\n        }),\n      };\n      // console.log(ordineObject);\n\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(ordineObject),\n      };\n      fetch('/api/ordini', requestOptions)\n        .then(res => res.json())\n        .then(data => {\n          alert(data.msg);\n          window.location.reload();\n        })\n        .catch(err =>\n          console.log(`Errore durante la richiesta di post al server: ${err}`)\n        );\n    } else {\n      alert(`Selezionare l'orario di ritiro`);\n    }\n  }\n\n  componentDidMount() {\n    fetch('/api/prodotti/')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          richiestaProdottiEffettuata: true,\n          prodotti: data,\n        });\n      })\n      .catch('Errore nel fetch dei prodotti: ' + console.log);\n  }\n\n  render() {\n    let { richiestaProdottiEffettuata } = this.state;\n\n    if (richiestaProdottiEffettuata) {\n      return (\n        <HomePageView\n          prodotti={this.state.prodotti}\n          prodottiOrdine={this.state.prodottiOrdine}\n          setProdottiOrdine={this.setProdottiOrdine}\n          updateQuantitàOrdineConId={this.updateQuantitàOrdineConId}\n          setOrarioDiRitiro={this.setOrarioDiRitiro}\n          totaleDaPagare={this.state.totaleDaPagare}\n          submitOrdine={this.submitOrdine}\n        />\n      );\n    } else {\n      return (\n        <center>\n          <h1>Loading...</h1>\n        </center>\n      );\n    }\n  }\n}\n\nexport default Home;\n","import { Button, Divider, Grid, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nexport default function OrdineClienteListItem({ ordine, requestStateChange }) {\n  const [itemSelected, setItemSelected] = useState(false);\n\n  const handleClick = () => {\n    setItemSelected(!itemSelected);\n  };\n\n  const ottieniTestoDelPulsanteStato = stato => {\n    switch (stato) {\n      case 'DA-PREPARARE':\n        return 'Pronto';\n      case 'PREPARATO':\n        return 'Consegnato';\n      case 'CONSEGNATO':\n        return 'Già Consegnato';\n      default:\n        return 'Errore';\n    }\n  };\n\n  return (\n    <Grid xs={12} item>\n      <br />\n      <Divider />\n      <br />\n      <Grid container justify='space-between' onClick={handleClick}>\n        <Typography variant='subtitle1'>{`${ordine.identificativocliente}`}</Typography>\n        {/* <Typography variant='subtitle1'>{`Qt: ${ordine.prodottiordine.length}`}</Typography> */}\n        <Typography variant='subtitle1'>{`€${ordine.totaledapagare.toFixed(\n          2\n        )}`}</Typography>\n      </Grid>\n      <div style={{ display: itemSelected ? 'block' : 'none' }}>\n        {ordine.prodottiordine.map(prodottoordine => (\n          <div key={prodottoordine.prodotto.id}>\n            <Grid container justify='space-between'>\n              <Typography\n                variant='subtitle1'\n                component='p'\n              >{` • ${prodottoordine.prodotto.nomeprodotto}`}</Typography>\n              <Typography variant='subtitle1'>{`Qt: ${prodottoordine.quantità}`}</Typography>\n            </Grid>\n            <Typography variant='caption' component='p'>\n              <i>{`    - ${prodottoordine.prodotto.descrizione}`}</i>\n            </Typography>\n          </div>\n        ))}\n        <br />\n\n        <br />\n        <Grid container justify='space-between'>\n          <Typography variant='caption' component='p'>\n            Stato: {ordine.stato}\n          </Typography>\n          <Button\n            variant='outlined'\n            onClick={() => requestStateChange(ordine.id)}\n          >\n            {ottieniTestoDelPulsanteStato(ordine.stato)}\n          </Button>\n        </Grid>\n      </div>\n    </Grid>\n  );\n}\n","import {\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport orari from '../Orari';\nimport OrdineClienteListItem from './OrdineClienteListItem';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 'auto',\n    flexGrow: 1,\n  },\n});\n\nexport default function ListeOrdini({ arrayOrdini, requestStateChange }) {\n  const classes = useStyles();\n\n  const verificaNumOrdini = contatoreOrdini => {\n    if (contatoreOrdini === 0) {\n      return <h6>Niente ordini per questa fascia oraria</h6>;\n    } else {\n      contatoreOrdini = 0;\n      return '';\n    }\n  };\n  return (\n    <>\n      <Grid className={classes.root} container justify='flex-start' spacing={3}>\n        {orari.map(orario => {\n          let contatoreOrdini = 0;\n          return (\n            <Grid xs={12} sm={6} md={4} lg={3} item key={orario}>\n              <Card style={{ height: '100%', width: '95%' }} elevation={5}>\n                <CardContent>\n                  <Typography\n                    style={{ textAlign: 'center' }}\n                    variant='subtitle2'\n                  >\n                    {orario}\n                  </Typography>\n\n                  <Grid className={classes.root} container justify='flex-start'>\n                    {arrayOrdini.map(ordine => {\n                      if (orario === ordine.orariodiritiro) {\n                        contatoreOrdini++;\n                        return (\n                          <OrdineClienteListItem\n                            key={ordine.id}\n                            ordine={ordine}\n                            requestStateChange={requestStateChange}\n                          />\n                        );\n                      }\n                      return '';\n                    })}\n                    {verificaNumOrdini(contatoreOrdini)}\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n}\n","import { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport ListeOrdini from '../ListeOrdini';\nimport LogoutButton from '../LogoutButton';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { Redirect } from 'react-router-dom';\n\nexport default class PaginaOrdini extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      arrayOrdini: [],\n      fetchedOrdini: false,\n    };\n    this.fetchOrdiniFromDatabase = this.fetchOrdiniFromDatabase.bind(this);\n    this.updateStatoOrdine = this.updateStatoOrdine.bind(this);\n    this.requestStateChange = this.requestStateChange.bind(this);\n  }\n\n  updateStatoOrdine(id) {\n    const newArrayOrdini = this.state.arrayOrdini.map(ordine => {\n      if (ordine.id.toString() === id.toString()) {\n        switch (ordine.stato) {\n          case 'DA-PREPARARE':\n            ordine.stato = 'PREPARATO';\n            break;\n          case 'PREPARATO':\n            ordine.stato = 'CONSEGNATO';\n            break;\n        }\n      }\n      return ordine;\n    });\n\n    this.setState({\n      arrayOrdini: newArrayOrdini,\n    });\n  }\n\n  requestStateChange(id) {\n    const requestOptions = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n    };\n\n    fetch(`/api/ordini/modificaStato/${id}`, requestOptions)\n      .then(res => res.json())\n      .then(data => {\n        this.updateStatoOrdine(id);\n      })\n      .catch(\n        `Errore nella richiesta di aggiornamento dello stato dell'ordine: ${console.log}`\n      );\n  }\n\n  fetchOrdiniFromDatabase() {\n    fetch('/api/ordini/')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          fetchedOrdini: true,\n          arrayOrdini: data,\n        });\n      })\n      .catch('Errore nel fetch degli ordini: ' + console.log);\n  }\n\n  componentDidMount() {\n    this.fetchOrdiniFromDatabase();\n  }\n\n  render() {\n    const { user, isLoading, isAuthenticated } = useAuth0();\n\n    if (!isLoading && !isAuthenticated) {\n      return <Redirect to='/' />;\n    }\n\n    if (!isLoading && isAuthenticated && user.email !== 'lekjec@gmail.com') {\n      return <Redirect to='/home' />;\n    }\n\n    if (this.state.fetchedOrdini) {\n      return (\n        <>\n          <AppBar stlye={{ flexGrow: 1 }} position='static'>\n            <Toolbar>\n              <Typography variant='h6'>Prenotazioni Bar Malignani</Typography>\n              <LogoutButton />\n            </Toolbar>\n          </AppBar>\n          <ListeOrdini\n            arrayOrdini={this.state.arrayOrdini}\n            requestStateChange={this.requestStateChange}\n          />\n        </>\n      );\n    } else {\n      return (\n        <center>\n          <h1>Loading...</h1>\n        </center>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport SignIn from './components/pages/SignIn';\nimport SignUp from './components/pages/SignUp';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport PaginaOrdini from './components/pages/PaginaOrdini';\nimport 'fontsource-roboto';\n\nfunction App() {\n  return (\n    <Router className='App'>\n      <Switch>\n        <Route path='/' exact component={SignIn}></Route>\n        <Route path='/sign-up' component={SignUp}></Route>\n        <Route path='/home' component={Home}></Route>\n        <Route path='/ordini' component={PaginaOrdini}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nReactDOM.render(\n  <Auth0Provider\n    domain='lekjec.eu.auth0.com'\n    clientId='DYvso3Kgu639QNpeRXmuX96vIqF3oGLa'\n    redirectUri={`${window.location.origin}/home`}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}